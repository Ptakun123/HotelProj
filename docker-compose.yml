version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: securepassword
      POSTGRES_DB: hotel_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hotel_network

  backend:
    build: ./back-end
    container_name: backend_app
    command: flask run --host=0.0.0.0 --port=5000
    environment:
      FLASK_APP: flaskr
      FLASK_ENV: development
      # inne zmienne środowiskowe jeśli potrzebne
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - hotel_network

  nginx:
    image: nginx:alpine
    container_name: nginx_server
    ports:
      - "8888:80"
    volumes:
      - ./image-server/nginx.conf:/etc/nginx/nginx.conf
      - ./image-server/images:/usr/share/nginx/html/images
    command: [nginx, '-g', 'daemon off;', '-c', '/etc/nginx/nginx.conf']
    depends_on:
      - backend
    networks:
      - hotel_network

  frontend:
    build:
      context: ./front-end/terminal
      dockerfile: Dockerfile
    container_name: frontend_app
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - hotel_network

volumes:
  postgres_data:

networks:
  hotel_network: